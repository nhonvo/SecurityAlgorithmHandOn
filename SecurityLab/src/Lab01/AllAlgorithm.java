/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Lab01;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
//import org.apache.commons.lang3.math.NumberUtils;

/**
 *
 * @author Administrator
 */
public class AllAlgorithm extends javax.swing.JFrame {

    int vig[][];

    public AllAlgorithm() {
        initComponents();

        vig = new int[26][26];
        for (int i = 0; i < 26; i++) {
            for (int j = 0; j < 26; j++) {
                vig[i][j] = (i + j) % 26;
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtP = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtK = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtC = new javax.swing.JTextArea();
        btnEncrypt = new javax.swing.JButton();
        btnDecrypt = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnOpen = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnSwap = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        radioCeaser = new javax.swing.JRadioButton();
        radioVigenere = new javax.swing.JRadioButton();
        radioPlayfair = new javax.swing.JRadioButton();
        radioRailfence = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Thuật toán mã hóa cổ điển");

        txtP.setColumns(20);
        txtP.setRows(5);
        jScrollPane1.setViewportView(txtP);

        jLabel2.setText("P");

        jLabel3.setText("K");

        jLabel4.setText("C");

        txtK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKActionPerformed(evt);
            }
        });

        txtC.setEditable(false);
        txtC.setColumns(20);
        txtC.setRows(5);
        jScrollPane3.setViewportView(txtC);

        btnEncrypt.setText("E");
        btnEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncryptActionPerformed(evt);
            }
        });

        btnDecrypt.setText("D");
        btnDecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecryptActionPerformed(evt);
            }
        });

        btnSave.setText("S");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnOpen.setText("O");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        btnClear.setText("C");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnSwap.setText("Swap");
        btnSwap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSwapActionPerformed(evt);
            }
        });

        jLabel5.setText("Option");

        buttonGroup1.add(radioCeaser);
        radioCeaser.setText("Ceasar");

        buttonGroup1.add(radioVigenere);
        radioVigenere.setText("Vigenere");

        buttonGroup1.add(radioPlayfair);
        radioPlayfair.setText("PlayFair");

        buttonGroup1.add(radioRailfence);
        radioRailfence.setText("Rail Fence");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(radioCeaser)
                .addGap(36, 36, 36)
                .addComponent(radioVigenere)
                .addGap(52, 52, 52)
                .addComponent(radioPlayfair)
                .addGap(43, 43, 43)
                .addComponent(radioRailfence)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioVigenere)
                    .addComponent(radioCeaser)
                    .addComponent(radioPlayfair)
                    .addComponent(radioRailfence))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnEncrypt)
                                .addGap(54, 54, 54)
                                .addComponent(btnDecrypt)
                                .addGap(40, 40, 40)
                                .addComponent(btnSave)
                                .addGap(41, 41, 41)
                                .addComponent(btnOpen)
                                .addGap(51, 51, 51)
                                .addComponent(btnClear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSwap))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtK, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(246, 246, 246)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtK, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(31, 31, 31)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEncrypt)
                    .addComponent(btnDecrypt)
                    .addComponent(btnSave)
                    .addComponent(btnOpen)
                    .addComponent(btnClear)
                    .addComponent(btnSwap))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKActionPerformed

    private int checkSelected() {
        if (radioCeaser.isSelected()) {
            return 1;
        } else if (radioVigenere.isSelected()) {
            return 2;
        } else if (radioPlayfair.isSelected()) {
            return 3;
        } else {
            return 4;
        }

    }
    private void btnDecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecryptActionPerformed
        // TODO add your handling code here:
        int o = checkSelected();
        if (radioCeaser.isSelected() || radioVigenere.isSelected() || radioPlayfair.isSelected() || radioRailfence.isSelected()) {
            switch (o) {
                case 1:
                    int k = Integer.valueOf(this.txtK.getText());
                    String br = this.txtP.getText();
                    this.txtC.setText(mahoa(br, -k, "", 1));
                    break;

                case 2:

                    String banma = this.txtP.getText();
                    String kV = this.txtK.getText();
                    String kt1 = "";
                    for (int i = 0; i < kV.length(); i++) {
                        kt1 += (char) (((26 - (Character.toUpperCase(kV.charAt(i)) - 'A')) % 26) + 'A');
                    }
                    //this.txtK.setText(kt1);
                    String banro = mahoa(banma, 0, kt1, 2);
                    this.txtC.setText(banro);
                    break;

                case 3:
                    String plaintext = this.txtP.getText();
                    String ciphertest = giaimaPF(plaintext);
                    int n = ciphertest.length();
                    String kqString = "";
                    for (int i = 0; i < n - 2;) {
                        if (ciphertest.charAt(i) == ciphertest.charAt(i + 2)) {
                            kqString += ciphertest.charAt(i);
                            i += 2;
                        } else {
                            kqString += ciphertest.charAt(i) + "" + ciphertest.charAt(i + 1);
                            i += 2;
                        }
                    }
                    if (ciphertest.charAt(n - 1) == 'X') {
                        kqString += ciphertest.charAt(n - 2);
                    } else {
                        kqString += ciphertest.charAt(n - 2) + "" + ciphertest.charAt(n - 1);
                    }

                    this.txtC.setText(kqString);
                    break;

                case 4:
                    int k4 = Integer.valueOf(this.txtK.getText());
                        String s = this.txtP.getText();
                        int n1 = s.length();
                        int sd, sc;
                        String kq = "";
                        sd = k4;
                        sc = n1 / sd + 1;
                        int sokytu = sc, t = 0;
                        char hr[][] = new char[sd][sc];
                        int sodu = s.length() % sd;
                        for (int i = 0; i < sd; i++) {
                            if (i >= sodu) {
                                sokytu = sc - 1;
                            }
                            for (int j = 0; j < sokytu; j++) {
                                hr[i][j] = s.charAt(t);
                                t++;
                            }
                        }
                        int c, d;
                        c = 0;
                        d = 0;
                        for (int i = 0; i < n1; i++) {
                            kq += hr[d][c];
                            d++;
                            if (d == k4) {
                                c++;
                                d = 0;
                            }
                        }
                        this.txtC.setText(kq);
                        break;

                default:
                    throw new AssertionError();
            }

        } else {
            JOptionPane.showMessageDialog(null, "Chọn loại mã hóa", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnDecryptActionPerformed

    private void btnEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncryptActionPerformed
        // TODO add your handling code here:
        int o = checkSelected();
        if (radioCeaser.isSelected() || radioVigenere.isSelected() || radioPlayfair.isSelected() || radioRailfence.isSelected()) {
            switch (o) {
                case 1:
                    int kC = Integer.valueOf(this.txtK.getText());
                        String brC = this.txtP.getText();
                        this.txtC.setText(mahoa(brC, kC, "", 1));
                        break;
                case 2:
                    String kV = this.txtK.getText();
                        String brV = this.txtP.getText();
                        this.txtC.setText(mahoa(brV, 0, kV, 2));
                        break;

                case 3:
                      String brP = this.txtP.getText();
                        brP = brP.toUpperCase();
                        brP = brP.replace('J', 'I');
                        this.txtC.setText(mahoa(brP, 0, "", 3));

                        break;
                case 4:
                    int k = Integer.valueOf(this.txtK.getText());
                        String s = this.txtP.getText();
                        int sd, sc;
                        sd = k;
                        sc = s.length() / sd + 1;
                        char hr[][] = new char[sd][sc];
                        int c, d;
                        c = 0;
                        d = 0;
                        int sodu = s.length() % sd;
                        for (int i = 0; i < s.length(); i++) {
                            hr[d][c] = s.charAt(i);
                            d++;
                            if (d == k) {
                                c++;
                                d = 0;
                            }
                        }
                        String kq = "";
                        int sokytu = sc;
                        for (int i = 0; i < sd; i++) {
                            if (i >= sodu) {
                                sokytu = sc - 1;
                            }
                            for (int j = 0; j < sokytu; j++) {
                                kq += hr[i][j];
                            }
                        }
                        this.txtC.setText(kq);
                        break;
                default:
                    throw new AssertionError();
            }

        } else {
            JOptionPane.showMessageDialog(null, "Chọn loại mã hóa", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnEncryptActionPerformed
    public static char[][] playFairArr(String key) {
        char[][] matrix = new char[5][5];
        ArrayList<Character> arr = new ArrayList<Character>();
        for (int i = 0; i < key.length(); i++) {
            if (key.charAt(i) == 'J') {
                continue;
            }
            arr.add(key.charAt(i));
        }

        String tempKey = new String(key);

        for (int i = 0; i < 26; i++) {
            char ch = (char) (i + 65);
            if (ch == 'J') {
                continue;
            }

            if (!arr.contains(ch)) {
                tempKey += ch;
            }
        }
        for (int i = 0, idx = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++) {
                matrix[i][j] = tempKey.charAt(idx++);
            }
        }
        return matrix;
    }

    private String mahoa(String br, int k1, String k2, int type) {

        switch (type) {
            case 1:
                String kqC = "";
                for (int i = 0; i < br.length(); i++) {
                    kqC += mahoakt(br.charAt(i), k1, ' ', 1);
                }
                return kqC;
            case 2:
                String kqV = "";
                int k = 0;
                for (int i = 0; i < br.length(); i++) {
                    if (Character.isLetter(br.charAt(i))) {
                        kqV += mahoakt(br.charAt(i), 0, k2.charAt(k), 2);
                        k++;
                        k %= k2.length();
                    } else {
                        kqV += br.charAt(i);
                    }
                }
                return kqV;
            case 3:
                int n = br.length();
                int i = 0;
                String bmP = "";
                char a,
                 b;
                while (i < n) {
                    if (i == n - 1) {
                        a = br.charAt(i);
                        b = 'X';
                        i++;
                    } else {
                        a = br.charAt(i);
                        b = br.charAt(i + 1);
                        if (a == b) {
                            b = 'X';
                            i++;
                        } else {
                            i += 2;
                        }
                        bmP += thaythekt(a, b);
                    }
                }
                return bmP;
            case 4:

                break;
            default:
                throw new AssertionError();
        }
        return "";
    }

    String giaimaPF(String banma) {
        int n = banma.length();
        String banro = "";
        char a, b;
        for (int i = 0; i < n; i += 2) {
            a = banma.charAt(i);
            b = banma.charAt(i + 1);

            banro += thaythektnguoc(a, b);
        }

        return banro;
    }

    String thaythektnguoc(char a, char b) {
        String vta = timVT(a);
        String vtb = timVT(b);
        char[][] arr = playFairArr(this.txtK.getText().toUpperCase());
        char x, y;
        if (vta.charAt(0) == vtb.charAt(0)) {//cung` hang`
            x = arr[vta.charAt(0) - '0'][((vta.charAt(1) - '0') - 1 + 5) % 5];
            y = arr[vtb.charAt(0) - '0'][((vtb.charAt(1) - '0') - 1 + 5) % 5];
            return x + "" + y;
        } else if (vta.charAt(1) == vtb.charAt(1)) {//cung` cot
            x = arr[((vta.charAt(0) - '0') - 1 + 5) % 5][vta.charAt(1) - '0'];
            y = arr[((vtb.charAt(0) - '0') - 1 + 5) % 5][vtb.charAt(1) - '0'];
            return x + "" + y;
        } else {//truong hop khac'
            x = arr[vta.charAt(0) - '0'][vtb.charAt(1) - '0'];
            y = arr[vtb.charAt(0) - '0'][vta.charAt(1) - '0'];
            return x + "" + y;
        }
    }

    String thaythekt(char a, char b) {
        String vta = timVT(a);
        String vtb = timVT(b);
        char[][] arr = playFairArr(this.txtK.getText().toUpperCase());
        char x, y;
        if (vta.charAt(0) == vtb.charAt(0)) {//cung` hang`
            x = arr[vta.charAt(0) - '0'][((vta.charAt(1) - '0') + 1) % 5];
            y = arr[vtb.charAt(0) - '0'][((vtb.charAt(1) - '0') + 1) % 5];
            return x + "" + y;
        } else if (vta.charAt(1) == vtb.charAt(1)) {//cung` cot
            x = arr[((vta.charAt(0) - '0') + 1) % 5][vta.charAt(1) - '0'];
            y = arr[((vtb.charAt(0) - '0') + 1) % 5][vtb.charAt(1) - '0'];
            return x + "" + y;
        } else {//truong hop khac'
            x = arr[vta.charAt(0) - '0'][vtb.charAt(1) - '0'];
            y = arr[vtb.charAt(0) - '0'][vta.charAt(1) - '0'];
            return x + "" + y;
        }
    }

    char mahoakt(char c, int k1, char k2, int type) {

        switch (type) {
            case 1:
                if (!Character.isLetter(c)) {
                    return c;
                }
                return (char) ((((Character.toUpperCase(c) - 'A') + k1) % 26 + 26) % 26 + 'A');
            case 2:
                int cn = Character.toUpperCase(c) - 'A';
                int k2n = Character.toUpperCase(k2) - 'A';
                int yn = vig[k2n][cn];
                return (char) (yn + 'A');
            default:
                break;

        }
        return ' ';
    }

    private String timVT(char a) {
        char[][] arr = playFairArr(this.txtK.getText().toUpperCase());
        for (int i = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++) {
                if (arr[i][j] == a) {
                    return i + "" + j;
                }
            }
        }

        return "";
    }
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        this.txtC.setText("");
        this.txtP.setText("");
        this.txtK.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        try {
            BufferedWriter bw = null;
            String fileName = "D:\\data.txt";
            String s = txtC.getText();
            bw = new BufferedWriter(new FileWriter(fileName));
            bw.write(s);
            bw.close();
            JOptionPane.showMessageDialog(null, "save success");
        } catch (Exception e) {
        }


    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSwapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSwapActionPerformed
        // TODO add your handling code here:
        String c = this.txtC.getText();
        this.txtP.setText(c);
        this.txtC.setText("");
    }//GEN-LAST:event_btnSwapActionPerformed

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_btnOpenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllAlgorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllAlgorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllAlgorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllAlgorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AllAlgorithm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDecrypt;
    private javax.swing.JButton btnEncrypt;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSwap;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JRadioButton radioCeaser;
    private javax.swing.JRadioButton radioPlayfair;
    private javax.swing.JRadioButton radioRailfence;
    private javax.swing.JRadioButton radioVigenere;
    private javax.swing.JTextArea txtC;
    private javax.swing.JTextField txtK;
    private javax.swing.JTextArea txtP;
    // End of variables declaration//GEN-END:variables
}
